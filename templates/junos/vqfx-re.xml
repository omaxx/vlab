<domain type='kvm'>
  <name>{{ device.name }}-{{ vm.name }}</name>
  <memory unit='MiB'>{{ vm.memory }}</memory>
  <vcpu placement='static'>{{ vm.vcpu }}</vcpu>
  <resource>
    <partition>/machine</partition>
  </resource>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <!--
    <type arch='x86_64' machine='pc-i440fx-rhel7.0.0'>hvm</type>
    -->
    <boot dev='hd'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='custom' match='exact' check='full'>
    <!--
    <model fallback='forbid'>Broadwell-IBRS</model>
    <vendor>Intel</vendor>
    <feature policy='require' name='vme'/>
    <feature policy='require' name='ss'/>
    <feature policy='disable' name='ht'/>
    <feature policy='disable' name='vmx'/>
    <feature policy='disable' name='osxsave'/>
    <feature policy='require' name='f16c'/>
    <feature policy='require' name='rdrand'/>
    <feature policy='require' name='hypervisor'/>
    <feature policy='disable' name='arat'/>
    <feature policy='disable' name='tsc_adjust'/>
    <feature policy='require' name='md-clear'/>
    <feature policy='require' name='stibp'/>
    <feature policy='require' name='ssbd'/>
    <feature policy='require' name='xsaveopt'/>
    <feature policy='disable' name='pdpe1gb'/>
    <feature policy='require' name='abm'/>
    <feature policy='disable' name='hle'/>
    <feature policy='disable' name='rtm'/>
    <feature policy='disable' name='erms'/>
    -->
  </cpu>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>

  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>

    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='{{ path.vlab }}/{{ device.name }}/{{ vm.name }}/{{ vm.images[0] }}'/>
      <backingStore/>
      <target dev='hda' bus='ide'/>
      <alias name='ide0-0-0'/>
      <address type='drive' controller='0' bus='0' target='0' unit='0'/>
    </disk>

    <controller type='usb' index='0' model='ich9-ehci1'>
      <alias name='usb'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x0e' function='0x7'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci1'>
      <alias name='usb'/>
      <master startport='0'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x0e' function='0x0' multifunction='on'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci2'>
      <alias name='usb'/>
      <master startport='2'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x0e' function='0x1'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci3'>
      <alias name='usb'/>
      <master startport='4'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x0e' function='0x2'/>
    </controller>
    <controller type='pci' index='0' model='pci-root'>
      <alias name='pci.0'/>
    </controller>
    <controller type='ide' index='0'>
      <alias name='ide'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x1'/>
    </controller>

    <interface type='network'>
      <source network='mgmt'/>
      <target dev='{{ device.name}}-{{ vm.name }}-mgmt'/>
      <model type='e1000'/>
    </interface>

    <interface type='network'>
      <source network='{{ device.name }}-int'/>
      <target dev='{{ device.name}}-{{ vm.name }}-int'/>
      <model type='e1000'/>
    </interface>

    <interface type='network'>
      <source network='{{ device.name }}-res'/>
      <target dev='{{ device.name}}-{{ vm.name }}-res'/>
      <model type='e1000'/>
    </interface>

    {% if 'interfaces' in device %}
    {% for interface in device.interfaces %}
    <interface type='network'>
      <mac address='aa:aa:aa:{{ device.id }}:00:{{ loop.index + 1 }}'/>
      <source network='{{ interface.network }}'/>
      <target dev='{{ device.name}}-{{ vm.name }}-{{ loop.index }}'/>
      <model type='e1000'/>
    </interface>
    {% endfor %}
    {% endif %}

    <serial type='tcp'>
      <source mode='bind' host='0.0.0.0' service='{{ port.console + device.id }}'/>
      <protocol type='telnet'/>
      <target port='0'/>
    </serial>
    <console type='tcp'>
      <source mode='bind' host='0.0.0.0' service='{{ port.console + device.id }}'/>
      <protocol type='telnet'/>
      <target type='serial' port='0'/>
    </console>

<!--
    <serial type='pty'>
      <source path='/dev/pts/1'/>
      <target type='isa-serial' port='0'>
        <model name='isa-serial'/>
      </target>
      <alias name='serial0'/>
    </serial>

    <console type='pty' tty='/dev/pts/1'>
      <source path='/dev/pts/1'/>
      <target type='serial' port='0'/>
      <alias name='serial0'/>
    </console>
-->
    <graphics type='vnc' port='{{ port.vnc + device.id }}' listen='0.0.0.0'>
      <listen type='address' address='0.0.0.0'/>
    </graphics>

    <input type='mouse' bus='ps2'>
      <alias name='input0'/>
    </input>
    <input type='keyboard' bus='ps2'>
      <alias name='input1'/>
    </input>
    <memballoon model='virtio'>
      <alias name='balloon0'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x0f' function='0x0'/>
    </memballoon>
  </devices>

<!--
  <seclabel type='dynamic' model='selinux' relabel='yes'>
    <label>system_u:system_r:svirt_t:s0:c41,c803</label>
    <imagelabel>system_u:object_r:svirt_image_t:s0:c41,c803</imagelabel>
  </seclabel>
  <seclabel type='dynamic' model='dac' relabel='yes'>
    <label>+0:+0</label>
    <imagelabel>+0:+0</imagelabel>
  </seclabel>
-->

</domain>
